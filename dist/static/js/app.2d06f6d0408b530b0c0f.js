webpackJsonp([1],{"1/Mr":function(t,e){t.exports={mode:"1634r34rtw16",apiH:"milleria.org",apiP:"3030",storeU:"https://everybline-1aae.restdb.io/rest",storeK:"5f7b0b29ed97473d24a5cfc1",ORSKey:"5b3ce3597851110001cf62486c6cb6cfcfc74b1aa529cfe60f07fedf"}},IhfS:function(t,e){},Ldmt:function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s("FcSG"),o=(s.n(i),s("z8jB")),r=s.n(o),a=s("cK3Q"),n=(s.n(a),s("bMd6")),l=(s.n(n),s("m5mp"));s.n(l);function h(t){switch(t.type){case"Polygon":return r()(t)>1?t:null;case"MultiPolygon":var e=[];if(Object(l.flattenEach)(t,function(t){r()(t)>1&&e.push(t.geometry.coordinates)}),e.length)return{type:"MultiPolygon",coordinates:e}}}e.default=function(t,e){var s=Object(n.getGeom)(t),o=Object(n.getGeom)(e),r=t.properties||{};if(s=h(s),o=h(o),!s)return null;if(!o)return Object(a.feature)(s,r);var l=i.diff(s.coordinates,o.coordinates);return 0===l.length?null:1===l.length?Object(a.polygon)(l[0],r):Object(a.multiPolygon)(l,r)}},NHnr:function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s("7+uW"),o={render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{id:"app"}},[e("router-view")],1)},staticRenderFns:[]};var r=s("VU/8")({name:"app"},o,!1,function(t){s("qrve")},null,null).exports,a=s("1/Mr"),n=s.n(a),l=s("/ocq"),h={name:"evERyBlINE",created:function(){this.msg="Every Brookline Line".toUpperCase()},mounted:function(){this.loadings.map=!0,this.konsole=[{msg:new Date,klass:"is-info",timeout:20,timeout:20}],this.MAP=new L.Map("map",{editable:!0,zoomControl:!1,center:[42,-72],attributionControl:!1,zoom:11}).on("click",t=>{L.popup().setLatLng(t.latlng).setContent(`<div class="heading">${t.latlng.lng},${t.latlng.lat}</div>\n                    <div class="heading">${t.latlng.lat},${t.latlng.lng}</div>`).openOn(this.MAP)}),this.VAP=new L.Map("vap",{editable:!0,zoomControl:!1,center:[42,-72],attributionControl:!1,zoom:11}),this.modals=this.$_.clone(this.modalsRestore);let t=408;this._CONSEOUL("p",t),this._CONSEOUL("p + 6",414),this.MAP.createPane("pnAdmin").style.zIndex=408,this.MAP.createPane("pnBuffered").style.zIndex=410,this.MAP.createPane("pnBufferedProposal").style.zIndex=411,this.MAP.createPane("pnTracks").style.zIndex=412,this.MAP.createPane("pnProposed").style.zIndex=413,this.MAP.createPane("pnStartfinish").style.zIndex=414,this.MAP.createPane("pnDebug").style.zIndex=409,this.MAP.createPane("pnTraceCenterlines").style.zIndex=415,this.MAP.createPane("pnTrace").style.zIndex=416,this.MAP.fitBounds([[42.31566161628652,-71.19664326310159],[42.36102434112847,-71.06506481766702]]);const e=new L.TileLayer("https://c.basemaps.cartocdn.com/light_all/{z}/{x}/{y}@2x.png");this.MAP.addLayer(e),this.VAP.addLayer(new L.TileLayer("https://b.tiles.mapbox.com/v4/aj.03e9e12d/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoiYWoiLCJhIjoiY2lrZW1pczJzMDA1d3VybTJha216azVtdSJ9.vJBkGAq6CvN9vt0IwakQ-A")),this.grpAdminGhost||(this.grpAdminGhost=new L.featureGroup({pane:"pnAdmin"}).addTo(this.MAP)),this.grptrace||(this.grptrace=new L.featureGroup({pane:"pnTrace"}).addTo(this.MAP)),this.grptracecenterlines||(this.grptracecenterlines=new L.featureGroup({pane:"pnTraceCenterlines"}).addTo(this.MAP)),this.grpAdmin||(this.grpAdmin=new L.featureGroup({pane:"pnAdmin"}).addTo(this.MAP)),this.grpCenterlines||(this.grpCenterlines=new L.featureGroup({pane:"pnAdmin"}).addTo(this.MAP)),this.grpBuffered||(this.grpBuffered=new L.featureGroup({pane:"pnBuffered"}).addTo(this.MAP),this.layers.push({handle:"grpBuffered",on:!1,abbrev:"hstb",klass:"noun_buffer"})),this.grpBufferedProposal||(this.grpBufferedProposal=new L.featureGroup({pane:"pnBufferedProposal"}).addTo(this.MAP)),this.grpHistory||(this.grpHistory=new L.featureGroup({pane:"pnTracks"}).addTo(this.MAP),this.layers.push({handle:"grpHistory",on:!1,abbrev:"hst",klass:"noun_history"})),this.grpPreview||(this.grpPreview=new L.featureGroup({pane:"pTracks"}).addTo(this.VAP)),this.grpProposed||(this.grpProposed=new L.featureGroup({pane:"pnProposed"}).addTo(this.MAP),this.layers.push({handle:"grpProposed",on:!1,abbrev:"prpsl",klass:"noun_proposed"})),this.grpStartfinish||(this.grpStartfinish=new L.layerGroup({pane:"pnStartfinish"}).addTo(this.MAP)),this.grpDebug||(this.grpDebug=new L.layerGroup({pane:"pnDebug"}).addTo(this.MAP),this.layers.push({handle:"grpDebug",on:!1,abbrev:"dbg",klass:"bug"})),axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/brookline`).then(t=>{L.geoJSON(t.data,{style:this._STILE("brookline"),snapIgnore:!0}).addTo(this.grpAdmin)}).catch(t=>{this.konsole=[{msg:t,klass:"error",timeout:20}]}),axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/brookline-outline`).then(t=>{this.townOutline=t.data}).catch(t=>{this.konsole=[{msg:t,klass:"error",timeout:20}]}),axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/brooklinesghost`).then(t=>{L.geoJSON(t.data,{style:this._STILE("debug"),snapIgnore:!0}).addTo(this.grpAdminGhost),this.border=this.$TURF_polygontoline(this.grpAdminGhost.toGeoJSON().features[0])}).catch(t=>{this.konsole=[{msg:t,klass:"error",timeout:20}]}),axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/centerlines`).then(t=>{L.geoJSON(t.data.payload,{style:this._STILE("centerlines")}).addTo(this.grpCenterlines)}).catch(t=>{this.konsole=[{msg:t,klass:"error",timeout:20}]}).then(t=>{this._META("centerlines")}),window.addEventListener("dragenter",t=>{t.preventDefault(),this.dropzone.state="drag",this.modals.dropzone=!0,this.dropzone.msg="DROP ANYWHERE",this.modals.dropzone=!0}),window.addEventListener("dragleave",t=>{t.preventDefault(),this.dropzone.state="idle",this.modals.dropzone=!0,this.dropzone.msg="DROP ANYWHERE"}),window.addEventListener("dragover",t=>{t.preventDefault(),this.modals.dropzone=!0,this.dropzone.msg="DROP ANYWHERE"}),window.addEventListener("drop",t=>{t.preventDefault(),this.dropzone.state="dropped",this.dropzone.msg="PLZ REVIEW...";let e=t.dataTransfer.files;this._DROPACCEPT(e)}),document.addEventListener("keydown",t=>{"escape"==t.key.toLowerCase()&&(this.modals=this.modalsRestore)}),this.loadings.map=!1,this._GETHISTORY(),this._FAKETRACE()},computed:{googleReviewOut:function(){let t=this.viasOut.length>0?`/${this.viasOut.join("/")}/`:"/";return this.startfinish?`https://www.google.com/maps/dir/${this.startfinish.s.latitude},${this.startfinish.s.longitude}${t}${this.startfinish.f.latitude},${this.startfinish.f.longitude}/data=!3m1!4b1!4m2!4m1!3e1`:null},googleReviewBack:function(){let t=this.viasBack.length>0?`/${this.viasBack.join("/")}/`:"/";return this.startfinish&&this.tracks.reetern?`https://www.google.com/maps/dir/${this.startfinish.f.latitude},${this.startfinish.f.longitude}${t}42.348340,-71.128191/data=!3m1!4b1!4m2!4m1!3e1`:null}},data:()=>({MAP:null,border:null,HERE:null,traceFake:[{lng:-71.1276028845577,lat:42.348776160060915,order:0},{lng:-71.12790036129813,lat:42.348157821774485,order:1},{lng:-71.12816065344602,lat:42.34767688779104,order:2},{lng:-71.12888575300082,lat:42.34752573635061,order:3},{lng:-71.12946211418542,lat:42.34846012125222,order:4},{lng:-71.13005706766629,lat:42.34927082631071,order:5},{lng:-71.13085653640621,lat:42.35016396384663,order:6},{lng:-71.12987114470351,lat:42.35038381113987,order:7},{lng:-71.12756569996516,lat:42.350315108943335,order:8},{lng:-71.12539040130072,lat:42.351221971891185,order:9},{lng:-71.1245909325608,lat:42.350988387231396,order:10},{lng:-71.12587380100392,lat:42.35005403991167,order:11},{lng:-71.12713807715078,lat:42.34955937982539,order:12},{lng:-71.12795613818697,lat:42.348776160060915,order:13}],traceFakeLIM:[{lng:-71.1276028845577,lat:42.348776160060915,order:0}],trace:[],avoid:!0,modalKick:!1,layers:[],midPointsOut:[],midPointsBack:[],viasOut:[],viasBack:[],meta:{within:!0,been:!1,distanceToBorder:null,centerlinesLength:null,historyLength:null,proposedLength:null},startfinish:{s:{longitude:null,latitude:null},f:{longitude:null,latitude:null}},konsole:[],dropzone:{state:null,msg:null},page:{title:"evERyBlINE",splayed:!1},modals:{dropzone:!0,credits:!1},modalsRestore:{dropzone:!1,credits:!1},loadings:{map:!1,drop:!1,tracks:!1,proposed:!1,reetern:!1},console:{state:null,msgs:[]},tracks:{incoming:null,history:[],proposed:[],buffered:null,bufferedProposal:null,reetern:null},credits:["routing: openrouteservice.org | OpenStreetMap contributors","buffered tracks icon: outline by Jellycons from the Noun Project","tracks icon: route by Andrejs Kirma from the Noun Project","tracks review icon: Test Tube by Icon Island from the Noun Project","proposed route icon: Vector by logan from the Noun Project"]}),methods:{_SETVIAS:function(){if(this.grpProposed&&this.grpProposed.toGeoJSON().features&&this.grpProposed.toGeoJSON().features.length>0){let t=this.$TURFH.featureCollection(this.$_.map(this.grpProposed.toGeoJSON().features[0].geometry.coordinates,(t,e)=>this.$TURFH.point(t,{name:e}))),e=this.$TURFH.featureCollection(this.$_.map(this.grpProposed.toGeoJSON().features[1].geometry.coordinates,(t,e)=>this.$TURFH.point(t,{name:e}))),s=this.$_.map(this.$TURFSAMPLE(t,10).features,t=>[t.geometry.coordinates[1],t.geometry.coordinates[0]]),i=this.$_.map(this.$TURFSAMPLE(e,10).features,t=>[t.geometry.coordinates[1],t.geometry.coordinates[0]]),o=this.$_.map(this.$_.sortBy(this.$_.map(s,e=>{let s=this.$_.find(t.features,t=>t.geometry.coordinates[0]==e[1]&&t.geometry.coordinates[1]==e[0]);return{lat:e[0],lng:e[1],iv:s.properties.name}}),"iv"),t=>[t.lat,t.lng]),r=this.$_.map(this.$_.sortBy(this.$_.map(i,t=>{let s=this.$_.find(e.features,e=>e.geometry.coordinates[0]==t[1]&&e.geometry.coordinates[1]==t[0]);return{lat:t[0],lng:t[1],iv:s.properties.name}}),"iv"),t=>[t.lat,t.lng]);this.viasOut=o,this.viasBack=r}},_STARTGET:function(t){return{longitude:-71.135404,latitude:42.339326}},_RANDOFINISHLINE:function(){let t=this.$_.map(this.grpAdminGhost.getBounds().toBBoxString().split(","),t=>parseFloat(t)),e={units:"kilometers",mask:this.grpAdminGhost.toGeoJSON().features[0].geometry},s=this.$TURFPTGRID(t,1,e);s.features=[s.features[this.$_.random(0,s.features.length-1)]];let i=this.$TURFSAMPLE(s,1),o=this.$_.first(i.features).geometry.coordinates;return{latitude:o[1],longitude:o[0]}},_UTIL:function(){const t=`mongodb+srv://${this.$CONFIG.monguU}:${this.$CONFIG.monguP}@cluster0.dosp5.azure.mongodb.net/${this.$CONFIG.monguD}?retryWrites=true&w=majority`,e=new this.$MONGO(t,{useNewUrlParser:!0});e.connect(t=>{e.db("test").collection("devices");e.close()})},_META:function(t){console.log("_META");switch(t){case"centerlines":this.meta.centerlinesLength=this.$TURFLENGTH(this.grpCenterlines.toGeoJSON());break;case"history":this.meta.historyLength=this.$TURFLENGTH(this.grpHistory.toGeoJSON());break;case"proposed":this.meta.proposedLength=this.$TURFLENGTH(this.grpProposed.toGeoJSON());break;default:this.meta.centerlinesLength=this.$TURFLENGTH(this.grpCenterlines.toGeoJSON()),this.meta.historyLength=this.$TURFLENGTH(this.grpHistory.toGeoJSON()),this.meta.proposedLength=this.$TURFLENGTH(this.grpProposed.toGeoJSON())}},_STILE:function(t,e){let s=null,i=this.$MOMENT("2020-10-12T12:00:11Z").unix(),o=this.$MOMENT().unix(),r=null;switch(t){case"brookline":return{weight:5,opacity:.7,color:"rgba(239, 221, 141, 1)",fill:!1,fillOpacity:.6};case"incomingDefault":return{color:"rgba(236, 88, 0, 1)",fill:!1};case"centerlines":return{color:"#4aa",fill:!1,width:1,opacity:0};case"trace":return{dashArray:"2 5 10",color:"#87D100",fill:!1,weight:12,opacity:.8};case"untraversed":return{color:"#0D7CD6",fillColor:"#0D7CD6",fill:!0,weight:2,opacity:.88};case"incomingReturn":return{color:"rgba(120, 227, 253, 1)",fill:!1,dashArray:"2 5 10",opacity:.9,width:5,weight:8};case"incomingProposed":return{color:"rgba(36, 123, 160, 1)",fill:!1,dashArray:"5 10 2",opacity:.9,width:5,weight:8};case"proposalBuffer":return{color:"rgba(36, 123, 160, 1)",fill:!0,opacity:.2};case"buffer":return{color:"rgb(236, 88, 0)",fill:!0,fillOpacity:.3,opacity:.5};case"incomingHistory":return s=(r=e?this.$MOMENT(e).unix():this.$MOMENT().unix())?(r-i)/(o-i)+.3:1,{color:"rgb(51, 15, 10)",fill:!1,opacity:0};case"incomingDefault":return{color:`rgb(${Math.floor(254*Math.random()+1)},${Math.floor(254*Math.random()+1)},${Math.floor(254*Math.random()+1)})`,fill:!1,opacity:.6};case"start":return{radius:8,fillColor:"rgba(75, 83, 32, 1)",color:"rgba(75, 83, 32, 1)",weight:1,opacity:1,fillOpacity:1};case"finish":return{radius:8,fillColor:"rgba(111, 26, 7, 1)",color:"rgba(111, 26, 7, 1)",weight:1,opacity:1,fillOpacity:1};case"debug":return{radius:18,fillColor:"rgb(44,44,44)",color:"rgb(11,11,11)",weight:5,opacity:1,fillOpacity:.5};case"ghost":return{radius:1,fillColor:"rgb(44,44,44)",color:"rgb(55,11,55)",weight:2,opacity:.3,fillOpacity:.1};case"via":return{radius:6,fillColor:"rgb(233,233,233)",color:"rgb(11,11,11)",weight:5,opacity:1,fillOpacity:1};default:return{color:`rgba(${Math.floor(254*Math.random()+1)},${Math.floor(254*Math.random()+1)},${Math.floor(254*Math.random()+1)},${Math.random()})`,fillColor:`rgba(${Math.floor(254*Math.random()+1)},${Math.floor(254*Math.random()+1)},${Math.floor(254*Math.random()+1)},${Math.random()})`,fill:!0,fillOpacity:Math.random()}}},_CONSEOUL:function(t,e){if("1616"!==this.$CONFIG.mode)return null;t||console.warn("no conseoul M");const s=`padding: 10px; background-color: ${this._STILE("start").color}; color: ${this._STILE("incomingReturn").color}; font-size: .8em; font-weight:800;`;console.log(`%c${t}:`,s),console.log(e)},_FAKETRACE:function(){var t=0;setInterval(()=>{let e=this.traceFake[t];t++,this.trace.push(e||null)},5e3)},_TRACE:function(){navigator.geolocation.watchPosition(t=>{this.trace.push({lat:t.coords.latitude,lng:t.coords.longitude})})},_MAPTRACE:function(){if(this.trace.length>0){this.grptracecenterlines.clearLayers(),this.grptrace.clearLayers();let t=this.$_.last(this.$_.compact(this.trace)),e=this.$TURFH.point([t.lng,t.lat]),s=this.$TURFBUFFER(e,100,{units:"meters"});if(this.trace.length>1){let t=this.$TURFH.lineString(this.$_.map(this.$_.compact(this.trace),t=>[t.lng,t.lat])),i=this.$TURFBUFFER(t,10,{units:"meters"});L.geoJSON(t,{style:this._STILE("trace")}).addTo(this.grptrace),this.MAP.setView(L.latLng(e.geometry.coordinates[1],e.geometry.coordinates[0]),17,{animate:!0}),L.geoJSON(i,{style:this._STILE("debug")}).addTo(this.grpDebug);let o=this.$TURF_polygontoline(this.grpAdminGhost.toGeoJSON().features[0]);this.$TURF_booleanwithin(e,this.$TURFCOMBINE(this.grpBuffered.toGeoJSON()).features[0])||this.$_.each(this.grpCenterlines.toGeoJSON().features,t=>{let e=this.$TURF_center(t),o=this.$TURF_booleanwithin(e,s),r=this.$TURF_booleanwithin(e,i);o&&!r&&L.geoJSON(this.$TURFBUFFER(this.$TURFH.lineString(t.geometry.coordinates[0]),50,{units:"feet"}),{style:this._STILE("untraversed")}).addTo(this.grptracecenterlines)}),this.meta.within=this.$TURF_booleanwithin(e,this.grpAdminGhost.toGeoJSON().features[0]),this.meta.been=this.$_.some(this.tracks.buffered.features,t=>this.$TURF_booleanwithin(e,t)),this.meta.distanceToBorder=this.$TURF_pointtolinedistance(e,o.features[0],{units:"kilometers"})}}this._CONSEOUL()},_MAPSTARTFINISH:function(){this._CONSEOUL("MAPSTARTFINISH","running"),this.grpStartfinish.clearLayers(),this.grpDebug.clearLayers(),this.loadings.map=!0;let t=this._STILE("start");this._CONSEOUL("MAPSTARTFINISH.start",this.startfinish.s);let e=L.circle([this.startfinish.s.latitude,this.startfinish.s.longitude],{addClass:"leaflet-vertex-icon-hidden",fillColor:t.fillColor,color:t.color,radius:100}).addTo(this.grpStartfinish);e.enableEdit(),e.on("dragstart",t=>{t.layer.setStyle({color:"Gray"})}),e.on("dragend",e=>{this.startfinish.s={longitude:e.layer.getLatLng().lng,latitude:e.layer.getLatLng().lat},e.layer.setStyle({color:t.color,fillColor:t.fillColor})});let s=this._STILE("finish");this._CONSEOUL("MAPSTARTFINISH.finish",this.startfinish.finish);let i=L.circle([this.startfinish.f.latitude,this.startfinish.f.longitude],{addClass:"leaflet-vertex-icon-hidden",fillColor:s.fillColor,color:s.color,radius:100}).addTo(this.grpStartfinish);i.enableEdit(),i.on("dragstart",t=>{t.layer.setStyle({color:"Gray"})}),i.on("dragend",t=>{this.startfinish.f={longitude:t.layer.getLatLng().lng,latitude:t.layer.getLatLng().lat},t.layer.setStyle({color:s.color,fillColor:s.fillColor})}),this.loadings.map=!1,this._CONSEOUL()},_BUFFERFINISH:function(){this.loadings.map=!0;let t=this.$TURFBUFFER(this.$TURFH.point([this.startfinish.f.longitude,this.startfinish.f.latitude]),500,{units:"meters"}),e=this.grpAdminGhost.toGeoJSON().features[0],s=this.$TURFINTERSECT(t,e),i=this.$TURF_bbox(s),o=this.$TURFPTGRID(i,100,{units:"meters"}),r=[];this.$_.each(o.features,t=>{let e=t.geometry.coordinates,s=this.$TURF_nearestpointonline(this.grpCenterlines.toGeoJSON(),e,{units:"meters"});r.push(s)}),this.viasOut=this.$_.map(r,t=>t.geometry.coordinates),this.$_.each(r,t=>{L.geoJSON(t,{style:this._STILE(),pointToLayer:function(t,e){return new L.CircleMarker([e.lat,e.lng],{radius:12}).bindPopup(`${t.properties.fi}`)}}).addTo(this.grpDebug)}),this._LAUDIT("grpDebug",!1),this.loadings.map=!1},_MAPDROP:function(){this.grpPreview.clearLayers(),this.loadings.map=!0,L.geoJSON(this.tracks.incoming,{style:this._STILE("incomingDefault")}).bindPopup(t=>`<h5 class="is-size-5">${t.feature.properties.name}</h5><div class="is-size-7 has-text-grey-lighter">(${t.feature.properties.time})</div>`).addTo(this.grpPreview),this.VAP.fitBounds(this.grpPreview.getBounds()),this.loadings.map=!1,this.grpPreview.bringToFront()},_MAPHISTORY:function(){this.grpHistory.clearLayers(),this.tracks.history&&this.tracks.history.length>0&&(this.loadings.map=!0,this.$_.each(this.tracks.history,t=>{L.geoJSON(t,{style:this._STILE("incomingHistory",t.features[0].properties.time)}).bindPopup(t=>`<h5 class="is-size-5">${t.feature.properties.name}</h5>`).addTo(this.grpHistory)}),this.MAP.fitBounds(this.grpHistory.getBounds()),this.loadings.map=!1,this._BUFFERTRACKS(),this._LAUDIT("grpHistory",!1)),this._META()},_MAPPROPOSED:function(){this.grpProposed.clearLayers(),this.loadings.map=!0;L.geoJSON(this.tracks.proposed,{style:this._STILE("incomingProposed"),onEachFeature:(t,e)=>{e.enableEdit(this.MAP),e.on("dblclick",L.DomEvent.stop).on("dblclick",e.toggleEdit),e.on("editable:editing",function(t){t.layer.setStyle({color:"DarkRed"})}),e.on("editable:vertex:dragend",t=>{t.layer.setStyle({color:"Green"}),this.midPointsOut.push(L.latLng(t.vertex.latlng.lat,t.vertex.latlng.lng))})}}).addTo(this.grpProposed),this.tracks.reetern&&L.geoJSON(this.tracks.reetern,{style:this._STILE("incomingReturn"),onEachFeature:(t,e)=>{e.enableEdit(this.MAP),e.on("dblclick",L.DomEvent.stop).on("dblclick",e.toggleEdit),e.on("editable:editing",function(t){t.layer.setStyle({color:"DarkRed"})}),e.on("editable:vertex:dragend",t=>{t.layer.setStyle({color:"Green"}),this.midPointsBack.push(L.latLng(t.vertex.latlng.lat,t.vertex.latlng.lng))})}}).addTo(this.grpProposed);this.MAP.fitBounds(this.grpProposed.getBounds()),this.loadings.map=!1,this._LAUDIT("grpProposed",!0),this._META()},_GETHISTORY:function(){this.loadings.tracks=!0,axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/tracks`).then(t=>{this.konsole=[{timeout:20,klass:t.data.success?"":"has-text-danger",msg:t.data.msg}],this.loadings.tracks=!1,this.tracks.history=t.data.payload})},_GETHERE:function(){axios.get("https://router.hereapi.com/v8/routes?apiKey=P5Mhg-TNACXQ9g1bJwa64E-Pk6_aS79pwuQ6mMm7HZA&transportMode=car&origin=42.31977991129439,-71.12351417541505&destination=42.33780085046662,-71.1551856994629&return=polyline&avoid[areas]=bbox:-71.14754676818849,42.328537209663565,-71.13492965698244,42.32536441628998").then(t=>{console.log("resp",t),this.HERE={raw:t.data,decodedmb:this.$MBFLEXPOLY.decode(t.data.routes[0].sections[0].polyline),decodedhere:this.$HEREFLEX.decode(t.data.routes[0].sections[0].polyline),asGeo:this.$TURFH.lineString(this.$_.map(this.$HEREFLEX.decode(t.data.routes[0].sections[0].polyline).polyline,t=>[t[1],t[0]])),asGeoL:L.PolylineUtil.decode(t.data.routes[0].sections[0].polyline),decodedmbgeo:this.$MBFLEXPOLY.toGeoJSON(t.data.routes[0].sections[0].polyline)}})},_GETPROPOSED:function(){this.loadings.proposed=!0;let t=[];t.push([this.startfinish.s.longitude,this.startfinish.s.latitude]),this.midPointsOut.length>0&&this.$_.each(this.midPointsOut,e=>{t.push([e.lng,e.lat])}),t.push([this.startfinish.f.longitude,this.startfinish.f.latitude]);this.$TURFCOMBINE(this.tracks.buffered).features[0];let e=this.grpAdmin.toGeoJSON().features[0],s=(this.tracks.buffered&&this.avoid,{elevation:!0,coordinates:this.$_.compact(t),instructions:"false",options:{avoid_polygons:e.geometry},preference:"recommended",roundabout_exits:"true",suppress_warnings:"true"});console.log("proposal",s),"1616"==this.$CONFIG.mode?axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/ors/out`).then(t=>{this.tracks.proposed=t.data,this.loadings.proposed=!1}):axios.post("http://api.openrouteservice.org/v2/directions/driving-car/geojson",s,{headers:{Accept:"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8",Authorization:`${this.$CONFIG.ORSKey}`,"Content-Type":"application/json; charset=utf-8"}}).then(t=>{this.loadings.proposed=!1,this.tracks.proposed=t.data,this.konsole=[{timeout:20,klass:"has-text-danger",msg:`ORS engine ${t.data.metadata.engine.version} returned a ${t.data.features.length}-seg route`}]}).catch(t=>{console.log("error",t.toJSON()),this.konsole=[{timeout:20,klass:"has-text-danger",msg:t.message}]})},_RESETRETURN:function(){this.midPointsBack=[],this.tracks.reetern=null},_RESETPROPOSED:function(){this.midPointsOut=[],this.tracks.proposed=null},_GETRETURN:function(){let t=[];t.push([this.startfinish.f.longitude,this.startfinish.f.latitude]),this.midPointsBack.length>0&&this.$_.each(this.midPointsBack,e=>{t.push([e.lng,e.lat])}),t.push([-71.128191,42.34834]);this.$TURFCOMBINE(this.tracks.buffered).features[0],this.grpAdmin.toGeoJSON().features[0];console.log("this.tracks.bufferedProposal",this.tracks.bufferedProposal);let e=this.$TURFCOMBINE(this.tracks.bufferedProposal).features[0];console.log("trackOut",e);let s=e;console.log("avoidPoly",s),console.log("avoidPoly",s.geometry);let i=(this.tracks.buffered&&this.avoid,{elevation:!0,coordinates:this.$_.compact(t),instructions:"false",options:{avoid_polygons:s.geometry},preference:"recommended",roundabout_exits:"true",suppress_warnings:"true"});"1616"==this.$CONFIG.mode?axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/ors/back`).then(t=>{this.tracks.reetern=t.data,this.loadings.reetern=!1}):axios.post("http://api.openrouteservice.org/v2/directions/driving-car/geojson",i,{headers:{Accept:"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8",Authorization:`${this.$CONFIG.ORSKey}`,"Content-Type":"application/json; charset=utf-8"}}).then(t=>{this.loadings.reetern=!1,this.tracks.reetern=t.data,this.konsole=[{timeout:20,klass:"has-text-danger",msg:`ORS engine ${t.data.metadata.engine.version} returned a ${t.data.features.length}-seg route`}]}).catch(t=>{console.log("error",t.toJSON()),this.konsole=[{timeout:20,klass:"has-text-danger",msg:t.message}]})},_GETRETURNOG:function(){this.loadings.reetern=!0;let t=[],e=this.$TURFH.featureCollection(this.$_.map(this.viasBack,t=>{console.log("vb",t);let e=this.$TURFH.point([t[0],t[1]]);return console.log("pt",e),e}));console.log("bfc",e);let s=this.$TURFH.point([this.startfinish.s.longitude,this.startfinish.s.latitude]);console.log("st",s);let i=this.$TURF_nearestpoint(s,e);console.log("newFinish",i),L.geoJSON(i).addTo(this.grpDebug);let o=[350];this.midPointsBack.length>0&&this.$_.each(this.midPointsBack,e=>{o.push(350),t.push([e.lng,e.lat])}),o.push(350),t.push([-71.127982,42.348306]);this.$TURFENVELOPE(this.grpStartfinish.toGeoJSON());let r=this.$TURFCOMBINE(this.tracks.buffered).features[0],a=this.grpAdmin.toGeoJSON().features[0],n=this.$TURFCOMBINE(this.tracks.bufferedProposal).features[0],l=this.avoid?this.$TURFUNION(r,n):n,h=this.$TURFUNION(l,a),d=this.tracks.buffered&&this.avoid?{elevation:!0,coordinates:this.$_.compact(t),instructions:"false",radiuses:o,options:{avoid_polygons:h.geometry},preference:"recommended",roundabout_exits:"true",suppress_warnings:"true"}:{elevation:!0,coordinates:this.$_.compact(t),instructions:"false",options:{avoid_polygons:this.tracks.bufferedProposal.features[0].geometry},preference:"recommended",roundabout_exits:"true",suppress_warnings:"true"};console.log("proposal",d),"1616"==this.$CONFIG.mode?axios.get(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/ors/back`).then(t=>{this.tracks.reetern=t.data,this.loadings.reetern=!1}):axios.post("http://api.openrouteservice.org/v2/directions/driving-car/geojson",d,{headers:{Accept:"application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8",Authorization:`${this.$CONFIG.ORSKey}`,"Content-Type":"application/json; charset=utf-8"}}).then(t=>{console.log("resp",t),this.loadings.reetern=!1,this.tracks.reetern=t.data,this.konsole=[{timeout:20,klass:"has-text-danger",msg:`ORS engine ${t.data.metadata.engine.version} returned a ${t.data.features.length}-seg route`}]}).catch(t=>{console.log("error",t.toJSON()),this.konsole=[{timeout:20,klass:"has-text-danger",msg:t.message}]}),this._META()},_DROPSTORE:function(){this.loadings.submit=!0,this.modals.dropzone=!1,this.grpPreview.clearLayers(),axios.post(`http://${this.$CONFIG.apiH}:${this.$CONFIG.apiP}/ebl/submit`,this.tracks.incoming).then(t=>{this.konsole=[{timeout:t.data.success?12:20,klass:t.data.success?"":"has-text-danger",msg:t.data.msg}],this.loadings.submit=!1}).then(t=>{this.tracks.incoming=[]}).finally(t=>{this._GETHISTORY()})},_DROPACCEPT:function(t){this.loadings.drop=!0;const e=new FileReader;e.loadend=(t=>{delete t.target.result}),e.onload=(t=>{this.tracks.incoming=this.$TOGEOJSON.gpx((new DOMParser).parseFromString(t.target.result,"text/xml")),this.loadings.drop=!1}),e.readAsText(t[0],"UTF-8")},_BUFFERTRACKS:function(t){this.grpBuffered.clearLayers(),this.tracks.buffered=this.$TURFBUFFER(this.grpHistory.toGeoJSON(),10,{units:"meters"})},_BUFFERPROPOSAL:function(t){this.grpDebug.clearLayers(),this.viasOut=[],this.viasBack=[];let e=this.$TURFLENGTH(this.grpProposed.toGeoJSON());console.log("pl",e),this.tracks.bufferedProposal=this.$TURFSIMPLE(this.$TURFBUFFER(this.grpProposed.toGeoJSON(),10,{units:"meters"}),{mutate:!0,tolerance:1e-4,highQuality:!0});let s=this.$TURFSIMPLE(this.$TURFBUFFER(this.grpProposed.toGeoJSON(),150,{units:"meters"}),{mutate:!0,tolerance:1e-4,highQuality:!0});L.geoJSON(s,{style:this._STILE("debug")}).addTo(this.grpDebug);let i=this.$TURF_lineintersect(this.grpCenterlines.toGeoJSON(),s),o=this.$_.compact(this.$_.reject(i.features,t=>this.$_.some(this.tracks.buffered.features,e=>{return this.$TURF_booleanwithin(t,e.geometry)?e:null})));this.$_.each(o,t=>{this.viasOut.push([t.geometry.coordinates[1],t.geometry.coordinates[0]])}),L.geoJSON(o,{style:this._STILE(),pointToLayer:function(t,e){return new L.CircleMarker([e.lat,e.lng],{radius:12})}}).addTo(this.grpDebug)},_MAPBUFFEREDTRACKS:function(t){L.geoJSON(this.tracks.buffered,{style:t=>this._STILE("buffer",t)}).addTo(this.grpBuffered),this.grpHistory.bringToFront(),this._LAUDIT("grpBuffered",!0)},_MAPBUFFEREDPROPOSAL:function(t){L.geoJSON(this.tracks.bufferedProposal,{style:t=>this._STILE("proposalBuffer",t)}).addTo(this.grpBufferedProposal),this._LAUDIT("grpBufferedProposal",!0)},_LAUDIT:function(t,e){let s=null;switch(t){case"grpHistory":e?(this.MAP.addLayer(this.grpHistory),this.$_.findWhere(this.layers,{handle:t}).on=!0):((s=this.$_.findWhere(this.layers,{handle:t}).on)?this.MAP.removeLayer(this.grpHistory):this.MAP.addLayer(this.grpHistory),this.$_.findWhere(this.layers,{handle:t}).on=!s);break;case"grpBuffered":e?(this.MAP.addLayer(this.grpBuffered),this.$_.findWhere(this.layers,{handle:t}).on=!0):((s=this.$_.findWhere(this.layers,{handle:t}).on)?this.MAP.removeLayer(this.grpBuffered):this.MAP.addLayer(this.grpBuffered),this.$_.findWhere(this.layers,{handle:t}).on=!s);break;case"grpTracks":e?(this.MAP.addLayer(this.grpTracks),this.$_.findWhere(this.layers,{handle:t}).on=!0):((s=this.$_.findWhere(this.layers,{handle:t}).on)?this.MAP.removeLayer(this.grpTracks):this.MAP.addLayer(this.grpTracks),this.$_.findWhere(this.layers,{handle:t}).on=!s);break;case"grpProposed":e?(this.MAP.addLayer(this.grpProposed),this.$_.findWhere(this.layers,{handle:t}).on=!0):((s=this.$_.findWhere(this.layers,{handle:t}).on)?this.MAP.removeLayer(this.grpProposed):this.MAP.addLayer(this.grpProposed),this.$_.findWhere(this.layers,{handle:t}).on=!s);break;case"grpCenterlines":e?(this.MAP.addLayer(this.grpCenterlines),this.$_.findWhere(this.layers,{handle:t}).on=!0):((s=this.$_.findWhere(this.layers,{handle:t}).on)?this.MAP.removeLayer(this.grpCenterlines):this.MAP.addLayer(this.grpCenterlines),this.$_.findWhere(this.layers,{handle:t}).on=!s);break;case"grpDebug":e?(this.MAP.addLayer(this.grpDebug),this.$_.findWhere(this.layers,{handle:t}).on=!0):((s=this.$_.findWhere(this.layers,{handle:t}).on)?this.MAP.removeLayer(this.grpDebug):this.MAP.addLayer(this.grpDebug),this.$_.findWhere(this.layers,{handle:t}).on=!s)}}},watch:{"HERE.asGeo":{handler:function(t,e){L.geoJSON(this.HERE.asGeo,{style:this._STILE("debug")}).addTo(this.grpDebug)}},avoid:{handler:function(t,e){this._GETPROPOSED()}},midPointsOut:{handler:function(t,e){t.length>=e.length?this._GETPROPOSED():console.log("midpoints out likely cleared")}},midPointsBack:{handler:function(t,e){t.length>=e.length?this._GETRETURN():console.log("midpoints back likely cleared")}},startfinish:{deep:!0,handler:function(t,e){this._MAPSTARTFINISH()}},loadings:{deep:!0,handler:function(t,e){this.$_.contains(this.$_.values(this.loadings),!0)?this.$refs.topProgress.start():this.$refs.topProgress.done()}},"tracks.proposed":{handler:function(t,e){this._MAPPROPOSED(),this._BUFFERPROPOSAL()}},"tracks.reetern":{handler:function(t,e){this._MAPPROPOSED(),this._BUFFERPROPOSAL()}},"tracks.buffered":{handler:function(t,e){this._MAPBUFFEREDTRACKS()}},"tracks.bufferedProposal":{handler:function(t,e){t.features&&this._MAPBUFFEREDPROPOSAL()}},"tracks.incoming":{handler:function(t,e){t.features&&this._MAPDROP()}},"tracks.history":{handler:function(t,e){this._MAPHISTORY()}},trace:{handler:function(t,e){this._MAPTRACE()}},"meta.within":{handler:function(t,e){e&&!t&&(this.konsole=[{timeout:6,klass:"has-text-danger",msg:"YOU JUST LEFT BROOKLINE"}]),t&&!e&&(this.konsole=[{timeout:6,klass:"has-text-info",msg:"ur back in brooklinline :-)"}])}}}},d={render:function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{},[s("vue-headful",{attrs:{title:t.page.title,description:"fxsxxxrrrre"}}),t._v(" "),s("vue-topprogress",{ref:"topProgress",attrs:{color:"rgba(236, 88, 0, 1)"}}),t._v(" "),s("div",{attrs:{id:"map"}}),t._v(" "),s("nav",{class:["navbar",t.meta.within?"ebl-bg-within":"ebl-bg-without"],attrs:{role:"navigation","aria-label":"main navigation"}},[s("div",{staticClass:"navbar-brand"},[s("a",{staticClass:"navbar-item",attrs:{href:""}},[t._v("\n      "+t._s(t.page.title)+"\n    ")])]),t._v(" "),s("div",{staticClass:"navbar-item is-pulled-right"},[t.meta.been?s("span",[t._v("(you've probably been here already)")]):t._e(),t._v(" "),t.meta.distanceToBorder?s("span",[t._v(" ("+t._s(""+Number(Math.round(t.meta.distanceToBorder+"e1")+"e-1"))+"km from border)")]):t._e()])]),t._v(" "),s("div",{class:["modal","has-text-weight-bold",t.modals.dropzone?"is-active":""],attrs:{id:"ebl-modal-dropzone"}},[s("div",{staticClass:"modal-background"}),t._v(" "),s("div",{staticClass:"modal-content"},[s("h3",{staticClass:"is-size-3 has-text-centered"},[t._v(t._s(t.dropzone.msg))]),t._v(" "),s("div",{staticClass:"columns"},[s("div",{staticClass:"pt-6 pr-2 column is-one-half"},["dropped"==t.dropzone.state&&t.tracks.incoming?s("div",{},t._l(t.tracks.incoming.features,function(e){return s("div",[s("p",{staticClass:"title is-4"},[s("i",{staticClass:"fa fa-bezier-curve",style:"color:"+t._STILE("incomingDefault").color}),t._v(" "+t._s(e.properties.name))]),t._v(" "),s("p",{staticClass:"subtitle is-6",domProps:{innerHTML:t._s("~"+Math.round(t.$TURFLENGTH(e.geometry,{units:"miles"}))+"mi on "+t.$MOMENT(e.properties.time).format("YYYY.MMM.Do"))}}),t._v(" "),s("span",{staticClass:"ebl-button icon is-medium",on:{click:function(e){return t._DROPSTORE()}}},[s("i",{staticClass:"fas fa-check-double fa-2x"})]),t._v(" "),s("span",{staticClass:"ebl-button icon is-medium",on:{click:function(e){t.tracks.incoming=null,t.modals.dropzone=null}}},[s("i",{staticClass:"fas fa-eject fa-2x"})])])}),0):t._e()]),t._v(" "),t._m(0)])]),t._v(" "),s("button",{staticClass:"modal-close is-large",attrs:{"aria-label":"close"},on:{click:function(e){t.modals.dropzone=!1}}})]),t._v(" "),s("div",{class:["modal"],attrs:{id:"modal-file-drop"}},[s("div",{staticClass:"modal-background"}),t._v(" "),s("div",{staticClass:"modal-content"},[t._v("\n        "+t._s(t.dropzone.state)+" "+t._s(t.dropzone.msg)+"\n      ")]),t._v(" "),s("button",{staticClass:"modal-close is-large",attrs:{"aria-label":"close"},on:{click:function(e){t.modals.dropzone=!1}}})]),t._v(" "),s("div",{class:["modal",t.modals.credits?"is-active":"","has-text-centered"],attrs:{id:"modal-credits"}},[s("div",{staticClass:"modal-background"}),t._v(" "),s("div",{staticClass:"modal-content"},[s("div",{staticClass:"navbar-item has-text-light"},[t.meta.historyLength?s("span",[t._v(t._s(Number(Math.round(t.meta.historyLength+"e1")+"e-1"))+"km down of ")]):t._e(),t._v(" \n          "),t.meta.centerlinesLength?s("span",[t._v(t._s(""+Number(Math.round(t.meta.centerlinesLength+"e1")+"e-1"))+"km total")]):t._e(),t._v(" "),t.meta.proposedLength?s("span",[t._v(" ("+t._s(""+Number(Math.round(t.meta.proposedLength+"e1")+"e-1"))+"km proposed)")]):t._e()]),t._v(" "),s("ul",{staticClass:"is-size-7"},t._l(t.credits,function(e){return s("li",[t._v(t._s(e))])}),0)]),t._v(" "),s("button",{staticClass:"modal-close is-large",attrs:{"aria-label":"close"},on:{click:function(e){t.modals.credits=!1}}})]),t._v(" "),s("footer",{staticClass:"footer p-1 has-text-centered"},[s("div",{staticClass:"is-size-7",attrs:{id:"konsole"}},[s("nav",{staticClass:"level"},t._l(t.konsole,function(e){return s("div",{class:["level-item","has-text-centered",e.klass,"faded"+e.timeout],attrs:{id:"konsole-copy"}},[s("div",[s("p",[t._v(t._s(e.msg))])])])}),0)]),t._v(" "),s("nav",{staticClass:"level is-mobile pl-2 pr-2",attrs:{id:"ebl-layers"}},[s("div",{staticClass:"level-left"},[s("div",{staticClass:"level-item"},[s("a",{staticClass:"mr-3",on:{click:function(e){if(!e.type.indexOf("key")&&t._k(e.keyCode,"default",void 0,e.key,void 0))return null;t.modals.credits=!0}}},[s("i",{staticClass:"fas fa-info-circle"})]),t._v(" "),t._l(t.layers,function(e){return s("a",{staticClass:"navbar-item",on:{click:function(s){if(!s.type.indexOf("key")&&t._k(s.keyCode,"default",void 0,s.key,void 0))return null;t._LAUDIT(e.handle)}}},[s("i",{class:["icon-"+e.klass,e.on?"ebl-nav-on":""]},[s("span",{staticClass:"pl-2"},[t._v(t._s(e.abbrev))])])])})],2)])])])],1)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"column is-one-half"},[e("div",{attrs:{id:"vap"}})])}]};var c=s("VU/8")(h,d,!1,function(t){s("IhfS")},null,null).exports;i.a.use(l.a);var p=new l.a({routes:[{path:"/",name:"EBL",component:c}]}),u=s("PJh5"),g=s.n(u),f=s("rNNc"),m=s("WiKS"),y=s.n(m),b=s("oOQZ"),v=s.n(b);const P=s("oCme"),T=s("9NYu"),O=s("dj2B"),_=s("y009").default,$=s("1UiH").default,E=s("7QBd").default,k=s("m5mp"),j=s("M07l").default,R=s("6CST").default,F=s("bEHx").default,S=s("iwmX").default,N=s("bEHx").default,M=s("Ldmt").default,A=s("2rhJ").default,C=s("KBgd").default,U=s("Ebq+").default,I=s("oEQs").default,w=s("EcKR").default,G=s("bz5O").default,x=s("a4kP").default,B=s("a4kP").default,z=s("5GQ8").default,H=s("cx8s").default,D=s("WIsE").default,J=s("tq8K").default,W=s("k/sV").default,V=s("EGTr").default,K=s("7tTk").default,q=s("SUmV").default,Y=s("cK3Q"),X=s("m5mp"),Q=s("7sEF");i.a.component("vue-headful",y.a),i.a.use(f.a),i.a.use(v.a,{color:"rgba(236, 88, 0, 1)"}),i.a.config.productionTip=!1,Object.defineProperty(i.a.prototype,"$PENC",{value:T}),Object.defineProperty(i.a.prototype,"$MBFLEXPOLY",{value:P}),Object.defineProperty(i.a.prototype,"$HEREFLEX",{value:O}),Object.defineProperty(i.a.prototype,"$MOMENT",{value:g.a}),Object.defineProperty(i.a.prototype,"$TURF_flip",{value:B}),Object.defineProperty(i.a.prototype,"$TURF_center",{value:H}),Object.defineProperty(i.a.prototype,"$TURF_pointtolinedistance",{value:q}),Object.defineProperty(i.a.prototype,"$TURF_nearestpoint",{value:N}),Object.defineProperty(i.a.prototype,"$TURF_lineintersect",{value:D}),Object.defineProperty(i.a.prototype,"$TURF_linesplit",{value:W}),Object.defineProperty(i.a.prototype,"$TURF_distance",{value:S}),Object.defineProperty(i.a.prototype,"$TURF_nearestpointonline",{value:K}),Object.defineProperty(i.a.prototype,"$TURF_booleanwithin",{value:G}),Object.defineProperty(i.a.prototype,"$TURF_booleanpointinpolygon",{value:w}),Object.defineProperty(i.a.prototype,"$TURF_bbox",{value:z}),Object.defineProperty(i.a.prototype,"$TURF_bboxclip",{value:J}),Object.defineProperty(i.a.prototype,"$TURFSIMPLE",{value:_}),Object.defineProperty(i.a.prototype,"$TURFEXPLODE",{value:U}),Object.defineProperty(i.a.prototype,"$TURF_polygontoline",{value:V}),Object.defineProperty(i.a.prototype,"$TURFCOMBINE",{value:F}),Object.defineProperty(i.a.prototype,"$TURFCLEAN",{value:$}),Object.defineProperty(i.a.prototype,"$TURFUNION",{value:x}),Object.defineProperty(i.a.prototype,"$TURFLENGTH",{value:E}),Object.defineProperty(i.a.prototype,"$TURFMETA",{value:k}),Object.defineProperty(i.a.prototype,"$TURFINTERSECT",{value:A}),Object.defineProperty(i.a.prototype,"$TURFBUFFER",{value:j}),Object.defineProperty(i.a.prototype,"$TURFH",{value:Y}),Object.defineProperty(i.a.prototype,"$TURFM",{value:X}),Object.defineProperty(i.a.prototype,"$TURFPTGRID",{value:R}),Object.defineProperty(i.a.prototype,"$TURFDIFF",{value:M}),Object.defineProperty(i.a.prototype,"$TURFENVELOPE",{value:C}),Object.defineProperty(i.a.prototype,"$TURFSAMPLE",{value:I}),Object.defineProperty(i.a.prototype,"$TOGEOJSON",{value:Q}),Object.defineProperty(i.a.prototype,"$CONFIG",{value:n.a}),new i.a({el:"#app",router:p,template:"<App/>",components:{App:r}})},dj2B:function(t,e){const s=5,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",o=[62,-1,-1,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,63,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],r=1,a=0,n="undefined"!=typeof BigInt?BigInt:Number;function l(t){let e=t;return e&n(1)&&(e=~e),+(e>>=n(1)).toString()}function h(t){let e="",s=n(t);for(;s>31;){const t=s&n(31)|n(32);e+=i[t],s>>=n(5)}return e+i[s]}function d(t){let e=n(t);const s=e<0;return e<<=n(1),s&&(e=~e),h(e)}t.exports={encode:function({precision:t=s,thirdDim:e=a,thirdDimPrecision:i=0,polyline:o}){const l=10**t,c=10**i,p=function(t,e,s){if(t<0||t>15)throw new Error("precision out of range. Should be between 0 and 15");if(s<0||s>15)throw new Error("thirdDimPrecision out of range. Should be between 0 and 15");if(e<0||e>7||4===e||5===e)throw new Error("thirdDim should be between 0, 1, 2, 3, 6 or 7");const i=s<<7|e<<4|t;return h(r)+h(i)}(t,e,i),u=[];let g=n(0),f=n(0),m=n(0);return o.forEach(t=>{const s=n(Math.round(t[0]*l));u.push(d(s-g)),g=s;const i=n(Math.round(t[1]*l));if(u.push(d(i-f)),f=i,e){const e=n(Math.round(t[2]*c));u.push(d(e-m)),m=e}}),[...p,...u].join("")},decode:function(t){const e=function(t){let e=n(0),s=n(0);const i=[];if(t.split("").forEach(t=>{const r=n(function(t){const e=t.charCodeAt(0);return o[e-45]}(t));e|=(r&n(31))<<s,(r&n(32))===n(0)?(i.push(e),e=n(0),s=n(0)):s+=n(5)}),s>0)throw new Error("Invalid encoding");return i}(t),s=function(t,e){if(+t.toString()!==r)throw new Error("Invalid format version");const s=+e.toString();return{precision:15&s,thirdDim:s>>4&7,thirdDimPrecision:s>>7&15}}(e[0],e[1]),i=10**s.precision,a=10**s.thirdDimPrecision,{thirdDim:h}=s;let d=0,c=0,p=0;const u=[];let g=2;for(;g<e.length;)d+=l(e[g])/i,c+=l(e[g+1])/i,h?(p+=l(e[g+2])/a,u.push([d,c,p]),g+=3):(u.push([d,c]),g+=2);if(g!==e.length)throw new Error("Invalid encoding. Premature ending reached");return{header:s,polyline:u}},ABSENT:a,LEVEL:1,ALTITUDE:2,ELEVATION:3}},qrve:function(t,e){},uslO:function(t,e,s){var i={"./af":"3CJN","./af.js":"3CJN","./ar":"3MVc","./ar-dz":"tkWw","./ar-dz.js":"tkWw","./ar-kw":"j8cJ","./ar-kw.js":"j8cJ","./ar-ly":"wPpW","./ar-ly.js":"wPpW","./ar-ma":"dURR","./ar-ma.js":"dURR","./ar-sa":"7OnE","./ar-sa.js":"7OnE","./ar-tn":"BEem","./ar-tn.js":"BEem","./ar.js":"3MVc","./az":"eHwN","./az.js":"eHwN","./be":"3hfc","./be.js":"3hfc","./bg":"lOED","./bg.js":"lOED","./bm":"hng5","./bm.js":"hng5","./bn":"aM0x","./bn-bd":"1C9R","./bn-bd.js":"1C9R","./bn.js":"aM0x","./bo":"w2Hs","./bo.js":"w2Hs","./br":"OSsP","./br.js":"OSsP","./bs":"aqvp","./bs.js":"aqvp","./ca":"wIgY","./ca.js":"wIgY","./cs":"ssxj","./cs.js":"ssxj","./cv":"N3vo","./cv.js":"N3vo","./cy":"ZFGz","./cy.js":"ZFGz","./da":"YBA/","./da.js":"YBA/","./de":"DOkx","./de-at":"8v14","./de-at.js":"8v14","./de-ch":"Frex","./de-ch.js":"Frex","./de.js":"DOkx","./dv":"rIuo","./dv.js":"rIuo","./el":"CFqe","./el.js":"CFqe","./en-au":"Sjoy","./en-au.js":"Sjoy","./en-ca":"Tqun","./en-ca.js":"Tqun","./en-gb":"hPuz","./en-gb.js":"hPuz","./en-ie":"ALEw","./en-ie.js":"ALEw","./en-il":"QZk1","./en-il.js":"QZk1","./en-in":"yJfC","./en-in.js":"yJfC","./en-nz":"dyB6","./en-nz.js":"dyB6","./en-sg":"NYST","./en-sg.js":"NYST","./eo":"Nd3h","./eo.js":"Nd3h","./es":"LT9G","./es-do":"7MHZ","./es-do.js":"7MHZ","./es-mx":"USNP","./es-mx.js":"USNP","./es-us":"INcR","./es-us.js":"INcR","./es.js":"LT9G","./et":"XlWM","./et.js":"XlWM","./eu":"sqLM","./eu.js":"sqLM","./fa":"2pmY","./fa.js":"2pmY","./fi":"nS2h","./fi.js":"nS2h","./fil":"rMbQ","./fil.js":"rMbQ","./fo":"OVPi","./fo.js":"OVPi","./fr":"tzHd","./fr-ca":"bXQP","./fr-ca.js":"bXQP","./fr-ch":"VK9h","./fr-ch.js":"VK9h","./fr.js":"tzHd","./fy":"g7KF","./fy.js":"g7KF","./ga":"U5Iz","./ga.js":"U5Iz","./gd":"nLOz","./gd.js":"nLOz","./gl":"FuaP","./gl.js":"FuaP","./gom-deva":"VGQH","./gom-deva.js":"VGQH","./gom-latn":"+27R","./gom-latn.js":"+27R","./gu":"rtsW","./gu.js":"rtsW","./he":"Nzt2","./he.js":"Nzt2","./hi":"ETHv","./hi.js":"ETHv","./hr":"V4qH","./hr.js":"V4qH","./hu":"xne+","./hu.js":"xne+","./hy-am":"GrS7","./hy-am.js":"GrS7","./id":"yRTJ","./id.js":"yRTJ","./is":"upln","./is.js":"upln","./it":"FKXc","./it-ch":"/E8D","./it-ch.js":"/E8D","./it.js":"FKXc","./ja":"ORgI","./ja.js":"ORgI","./jv":"JwiF","./jv.js":"JwiF","./ka":"RnJI","./ka.js":"RnJI","./kk":"j+vx","./kk.js":"j+vx","./km":"5j66","./km.js":"5j66","./kn":"gEQe","./kn.js":"gEQe","./ko":"eBB/","./ko.js":"eBB/","./ku":"kI9l","./ku.js":"kI9l","./ky":"6cf8","./ky.js":"6cf8","./lb":"z3hR","./lb.js":"z3hR","./lo":"nE8X","./lo.js":"nE8X","./lt":"/6P1","./lt.js":"/6P1","./lv":"jxEH","./lv.js":"jxEH","./me":"svD2","./me.js":"svD2","./mi":"gEU3","./mi.js":"gEU3","./mk":"Ab7C","./mk.js":"Ab7C","./ml":"oo1B","./ml.js":"oo1B","./mn":"CqHt","./mn.js":"CqHt","./mr":"5vPg","./mr.js":"5vPg","./ms":"ooba","./ms-my":"G++c","./ms-my.js":"G++c","./ms.js":"ooba","./mt":"oCzW","./mt.js":"oCzW","./my":"F+2e","./my.js":"F+2e","./nb":"FlzV","./nb.js":"FlzV","./ne":"/mhn","./ne.js":"/mhn","./nl":"3K28","./nl-be":"Bp2f","./nl-be.js":"Bp2f","./nl.js":"3K28","./nn":"C7av","./nn.js":"C7av","./oc-lnc":"KOFO","./oc-lnc.js":"KOFO","./pa-in":"pfs9","./pa-in.js":"pfs9","./pl":"7LV+","./pl.js":"7LV+","./pt":"ZoSI","./pt-br":"AoDM","./pt-br.js":"AoDM","./pt.js":"ZoSI","./ro":"wT5f","./ro.js":"wT5f","./ru":"ulq9","./ru.js":"ulq9","./sd":"fW1y","./sd.js":"fW1y","./se":"5Omq","./se.js":"5Omq","./si":"Lgqo","./si.js":"Lgqo","./sk":"OUMt","./sk.js":"OUMt","./sl":"2s1U","./sl.js":"2s1U","./sq":"V0td","./sq.js":"V0td","./sr":"f4W3","./sr-cyrl":"c1x4","./sr-cyrl.js":"c1x4","./sr.js":"f4W3","./ss":"7Q8x","./ss.js":"7Q8x","./sv":"Fpqq","./sv.js":"Fpqq","./sw":"DSXN","./sw.js":"DSXN","./ta":"+7/x","./ta.js":"+7/x","./te":"Nlnz","./te.js":"Nlnz","./tet":"gUgh","./tet.js":"gUgh","./tg":"5SNd","./tg.js":"5SNd","./th":"XzD+","./th.js":"XzD+","./tk":"+WRH","./tk.js":"+WRH","./tl-ph":"3LKG","./tl-ph.js":"3LKG","./tlh":"m7yE","./tlh.js":"m7yE","./tr":"k+5o","./tr.js":"k+5o","./tzl":"iNtv","./tzl.js":"iNtv","./tzm":"FRPF","./tzm-latn":"krPU","./tzm-latn.js":"krPU","./tzm.js":"FRPF","./ug-cn":"To0v","./ug-cn.js":"To0v","./uk":"ntHu","./uk.js":"ntHu","./ur":"uSe8","./ur.js":"uSe8","./uz":"XU1s","./uz-latn":"/bsm","./uz-latn.js":"/bsm","./uz.js":"XU1s","./vi":"0X8Q","./vi.js":"0X8Q","./x-pseudo":"e/KL","./x-pseudo.js":"e/KL","./yo":"YXlc","./yo.js":"YXlc","./zh-cn":"Vz2w","./zh-cn.js":"Vz2w","./zh-hk":"ZUyn","./zh-hk.js":"ZUyn","./zh-mo":"+WA1","./zh-mo.js":"+WA1","./zh-tw":"BbgG","./zh-tw.js":"BbgG"};function o(t){return s(r(t))}function r(t){var e=i[t];if(!(e+1))throw new Error("Cannot find module '"+t+"'.");return e}o.keys=function(){return Object.keys(i)},o.resolve=r,t.exports=o,o.id="uslO"}},["NHnr"]);
//# sourceMappingURL=app.2d06f6d0408b530b0c0f.js.map